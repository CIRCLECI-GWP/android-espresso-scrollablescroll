version: 2.1

orbs:
  android: circleci/android@2.5.0 # Use the CircleCI Android orb for easy setup

executors:
  android-executor:
    docker:
      - image: circleci/android:2022.04.1 # Updated image to compatible version for JDK 11
    resource_class: medium # Allocate more resources for emulator stability

jobs:
  build-library:
    executor: android-executor
    steps:
      - checkout
      - restore_cache: # Restore Gradle cache for faster builds
          keys:
            - gradle-cache-{{ checksum "build.gradle" }}
            - gradle-cache
      - run:
          name: Clean and Assemble Library
          command: ./gradlew clean assemble
      - save_cache: # Save cache to reuse in later jobs
          paths:
            - ~/.gradle
          key: gradle-cache-{{ checksum "build.gradle" }}

  deploy-to-sonatype:
    executor: android-executor
    steps:
      - checkout
      - run:
          name: Define ORG_GRADLE_PROJECT_LIBRARY_VERSION Environment Variable at Runtime
          command: |
            if [ $CIRCLE_TAG ]
              then
                echo 'export ORG_GRADLE_PROJECT_LIBRARY_VERSION=$CIRCLE_TAG' >> $BASH_ENV
              else
                echo "export ORG_GRADLE_PROJECT_LIBRARY_VERSION=$(git tag | tail -1)-SNAPSHOT" >> $BASH_ENV
            fi
            source $BASH_ENV
      - run:
          name: Import Maven Signing Key # Import GPG key for Maven publishing
          command: |
            echo "$GPG_SIGNING_KEY" | base64 --decode > /tmp/signingkey.asc
            gpg --import /tmp/signingkey.asc
      - run:
          name: Publish to Maven
          command: ./gradlew assemble publishToSonatype closeAndReleaseSonatypeStagingRepository

  run-ui-tests:
    executor: android-executor
    steps:
      - checkout
      - run:
          name: Install System Image # Install specific system image for emulator
          command: |
            sdkmanager --install "system-images;android-33;google_apis;x86_64"
            echo "y" | sdkmanager --licenses  # Accept SDK licenses
      - run:
          name: Start Emulator # Start emulator in headless mode for UI testing
          command: |
            echo "no" | avdmanager create avd -n test -k "system-images;android-33;google_apis;x86_64" --device "pixel_3"
            $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio -no-snapshot &
      - run:
          name: Wait for Emulator to Boot # Wait for the emulator to fully start
          command: |
            adb wait-for-device
            adb shell input keyevent 82  # Unlock screen
      - run:
          name: Run UI Tests
          command: ./gradlew connectedDebugAndroidTest

parameters:
  run-schedule:
    type: boolean
    default: false

workflows:
  build-test-deploy:
    when:
      not: << pipeline.parameters.run-schedule >>
    jobs:
      - build-library
      - run-ui-tests:
          name: build-and-test # Renaming for clarity
          filters:
            tags:
              only: /^[0-9]+.*/
      - hold-for-approval:
          type: approval
          requires:
            - build-and-test
          filters:
            tags:
              only: /^[0-9]+.*/
            branches:
              ignore: /.*/
      - deploy-to-sonatype:
          name: Deploy to Maven Central
          requires:
            - hold-for-approval
          filters:
            tags:
              only: /^[0-9]+.*/

  nightly-snapshot:
    when: << pipeline.parameters.run-schedule >>
    jobs:
      - run-ui-tests:
          name: build-and-test
      - deploy-to-sonatype:
          name: Deploy Snapshot to Sonatype
          requires:
            - build-and-test
