version: 2.1

orbs:
  android: circleci/android@3.0.1

executors:
  android-machine-executor:
    machine:
      image: android:2023.08.1
    resource_class: large # Adjusted from xlarge to large

jobs:
  build-library:
    executor: android-machine-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-cache-v1-{{ checksum "build.gradle" }}
            - gradle-cache-v1-
      - run:
          name: Assemble library
          command: ./gradlew clean assemble
      - save_cache:
          paths:
            - ~/.gradle/caches/
          key: gradle-cache-v1-{{ checksum "build.gradle" }}

  deploy-to-sonatype:
    executor: android-machine-executor
    steps:
      - checkout
      - run:
          name: Define ORG_GRADLE_PROJECT_LIBRARY_VERSION Environment Variable at Runtime
          command: |
            if [ $CIRCLE_TAG ]
            then
              echo 'export ORG_GRADLE_PROJECT_LIBRARY_VERSION=$CIRCLE_TAG' >> $BASH_ENV
            else
              echo "export ORG_GRADLE_PROJECT_LIBRARY_VERSION=$(git tag | tail -1)-SNAPSHOT" >> $BASH_ENV
            fi
            source $BASH_ENV
      - run:
          name: Inject Maven signing key
          command: |
            echo "$GPG_SIGNING_KEY" \
              | awk 'NR == 1 { print "SIGNING_KEY=" } 1' ORS='\\n' \
              >> gradle.properties
            source $BASH_ENV
          when: always
      - run:
          name: Publish to Maven
          command: ./gradlew assemble publishToSonatype closeAndReleaseSonatypeStagingRepository

  run-ui-tests:
    executor: android-machine-executor
    steps:
      - checkout
      - run:
          name: Set Up Environment
          command: |
            sudo apt-get update
            sudo apt-get install -y libgl1-mesa-dev libglu1-mesa libxi6 libxrender1 libxtst6 libxcursor1 libxrandr2
            source $BASH_ENV
      - run:
          name: Create AVD
          command: |
            source $BASH_ENV
            avdmanager create avd -n test -k 'system-images;android-28;default;x86' --device 'Nexus 5' --force
      - run:
          name: Start Emulator
          command: |
            source $BASH_ENV
            emulator -avd test -no-window -no-audio -no-boot-anim -memory 1024 -accel off -verbose -show-kernel > emulator.log 2>&1 &
            adb wait-for-device
            boot_completed=""
            timeout_in_sec=900
            while [[ "$boot_completed" != "1" && $timeout_in_sec -gt 0 ]]; do
              sleep 5
              timeout_in_sec=$((timeout_in_sec - 5))
              boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
              echo "Waiting for emulator to boot... ($timeout_in_sec seconds left)"
            done
            if [[ "$boot_completed" != "1" ]]; then
              echo "Emulator failed to boot within expected time."
              exit 1
            fi
            echo "Emulator booted successfully!"
      - run:
          name: Verify Connected Devices
          command: |
            source $BASH_ENV
            adb kill-server
            adb start-server
            adb devices
      - run:
          name: Unlock Screen
          command: |
            source $BASH_ENV
            adb shell input keyevent 82
      - run:
          name: Run UI Tests
          command: |
            source $BASH_ENV
            ./gradlew sample:connectedDebugAndroidTest
      - store_artifacts:
          path: emulator.log
          destination: emulator.log

parameters:
  run-schedule:
    type: boolean
    default: false

workflows:
  build-test-deploy:
    jobs:
      - run-ui-tests:
          filters:
            tags:
              only: /^[0-9]+.*/
      - hold-for-approval:
          type: approval
          requires:
            - run-ui-tests
          filters:
            tags:
              only: /^[0-9]+.*/
            branches:
              ignore: /.*/
      - deploy-to-sonatype:
          name: Deploy to Maven Central
          requires:
            - hold-for-approval
          filters:
            tags:
              only: /^[0-9]+.*/
  nightly-snapshot:
    when: << pipeline.parameters.run-schedule >>
    jobs:
      - run-ui-tests
      - deploy-to-sonatype:
          name: Deploy Snapshot to Sonatype
          requires:
            - run-ui-tests
